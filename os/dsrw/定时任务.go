//定时任务
//提供周期性任务执行功能。使用方式类似于Linux下的Crontab或者Java里的Quartz。本对象线程安全。
package os

//
//type E定时任务 struct {
//}
//
//func New定时任务() *E定时任务 {
//	this := new(E定时任务)
//	return this
//}
//
////调用格式： 〈逻辑型〉 对象．初始化 （长整数型 最大数量，整数型 超时时间） - E2EE互联网服务器套件2.2.3->定时任务
////英文名称：Init
////初始化当前队列。本命令为初级对象成员命令。
////参数<1>的名称为“最大数量”，类型为“长整数型（int64）”，初始值为“-1”。队列存储数据的最大数量。[-1] 不限制数量(无限制)。如果等于0 或 小于“-1” 则会返回失败。
////参数<2>的名称为“超时时间”，类型为“整数型（int）”，初始值为“0”。弹出队列时的超时时间(单位：毫秒)。在弹出队列超过当前时间设置都没得到数据则直接返回(假) [0] 不设置超时：弹出队列没有新数据时直接返回(假) [-1] 阻塞直到得到有效数据。
////
////操作系统需求： Windows
//func (this *E定时任务) E初始化() {
//}
//
////调用格式： 〈逻辑型〉 对象．添加 （文本型 时间周期，子程序指针 任务处理函数） - E2EE互联网服务器套件2.2.3->定时任务
////英文名称：Push
////添加定时任务。本命令为初级对象成员命令。
////参数<1>的名称为“时间周期”，类型为“文本型（text）”。时间周期文本。格式为：[秒] [分] [小时] [日] [月] [周] [年] [任务名称]
////参数一共分为8段，前7段格式为时间格式(年份暂不起作用)，最后的[任务名称]为当前任务的名称，名称必须存在且名称不能跟其他任务冲突。时间可以可以使用*来代表所有，也可以用数字指定固定的时间。
////例如：
////0 0 0 * * * * 任务1
////说明：每天0点整执行任务1
////时间格式通过“,”可以指定多项不同的时间。例如：
////0 0,15,30,45 * * * * * 任务2
////说明：每小时的0分、15分、30分和45分执行任务2
////时间格式通过“-”可以指定时间段。例如：
////0 0,30 8-21 * * * * 任务3
////说明：每天08点到21点之间，每隔半小时执行一次任务3
////时间格式通过“*/”可以指定时间间隔。例如：
////*/3 * * * * * * 任务4
////说明：每隔3秒执行一次任务4
////注意：这种方法的参数目前只支持对应时间段内能够被整除的数。如秒和分钟(的数量)都为60，则他们可以指定为能被60整除的数 1、2、3、4、5、6、10、15等等
////时间范围：
////[秒] 可以是从0到59之间的任何整数。
////[分] 可以是从0到59之间的任何整数。
////[小时] 可以是从0到23之间的任何整数。
////[天] 表示日期，可以是从1到31之间的任何整数。
////[月] 表示月份，可以是从1到12之间的任何整数。
////[周] 表示星期几，可以是从0到6之间的任何整数，这里的0代表星期日。
////[年] 表示年份(暂时无效)。
////具体使用方法可以百度搜索：crontab。
////参数<2>的名称为“任务处理函数”，类型为“子程序指针（SubPtr）”。任务处理函数的格式跟 线程池完全一致。<无返回>处理函数([整数]投递数据句柄)
////============================
////.版本 2
////
////.子程序 任务处理函数
////.参数 投递数据句柄, 整数型
////.局部变量 时间, 日期时间型
////' // 线程池.取回任务数据(投递数据句柄, 时间)
////
////
////操作系统需求： Windows
//func (this *E定时任务) E添加() {
//}
//
////调用格式： 〈无返回值〉 对象．启动 （） - E2EE互联网服务器套件2.2.3->定时任务
////英文名称：Start
////启动定时任务。本命令为初级对象成员命令。
////
////操作系统需求： Windows
//func (this *E定时任务) E启动() int64 {
//}
//
////调用格式： 〈无返回值〉 对象．停止 （） - E2EE互联网服务器套件2.2.3->定时任务
////英文名称：Stop
////停止定时任务。本命令为初级对象成员命令。
////
////操作系统需求： Windows
//func (this *E定时任务) E停止() {
//}
//
////调用格式： 〈无返回值〉 对象．清空 （） - E2EE互联网服务器套件2.2.3->定时任务
////英文名称：Clear
////清空所有的定时任务。本命令为初级对象成员命令。
////
////操作系统需求： Windows
//func (this *E定时任务) E清空() {
//}
//
////调用格式： 〈逻辑型〉 对象．是否运行中 （） - E2EE互联网服务器套件2.2.3->定时任务
////英文名称：IsRunning
////判断定时任务是否正在运行。本命令为初级对象成员命令。
////
////操作系统需求： Windows
//func (this *E定时任务) E是否运行中() interface{} {
//
//}
//
////调用格式： 〈逻辑型〉 对象．取回任务数据 （整数型 投递数据句柄，通用型变量 数据变量） - E2EE互联网服务器套件2.2.3->通用线程池对象
////英文名称：GetParamMap
////在投递的函数中取回投递的数据。本命令为初级对象成员命令。
////参数<1>的名称为“投递数据句柄”，类型为“整数型（int）”。投递数据句柄参数数据。
////参数<2>的名称为“数据变量”，类型为“通用型（all）”，提供参数数据时只能提供变量。要取回数据的目标变量。如果要接收的原始数据类型为存取列表、存取键值表时，此处的变量类型不匹配则直接返回假。如果此处变量为易语言基础数据类型，则队列中的数据将自动转换为此处的变量本身的数据类型。
////
////操作系统需求： Windows
//func (this *E定时任务) E取回任务数据() interface{} {
//
//}
//
