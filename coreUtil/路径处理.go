package E

import (
	_ "crypto/md5"
	"path"
)

//调用格式： 〈文本型〉 路径_合并 （文本型 路径1，文本型 路径2，... ） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathJoin
//合并多个路径。假设第一个路径为目录，路径之间将通过“/”连接。两个路径均支持相对路径符号“./”和“../”。路径不区分“\”和“/”，最终生成的路径都以“/”为主。本命令为初级命令。命令参数表中最后一个参数可以被重复添加。
//参数<1>的名称为“路径1”，类型为“文本型（text）”。第一个路径。可以为相对路径。
//参数<2>的名称为“路径2”，类型为“文本型（text）”。第二个路径。可以为相对路径。
//
//操作系统需求： Windows
func E路径_合并(elem ...string) string {
	return path.Join(elem...)
}

//调用格式： 〈文本型〉 路径_取名称 （文本型 路径，逻辑型 包含后缀） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathGetName
//返回路径最后一个节点的名称信息。本命令为初级命令。
//参数<1>的名称为“路径”，类型为“文本型（text）”。要获取名称的路径。可以为相对路径。
//参数<2>的名称为“包含后缀”，类型为“逻辑型（bool）”，初始值为“真”。是否包含文件后缀名称。
//
//操作系统需求： Windows

//
//调用格式： 〈文本型〉 路径_取后缀名 （文本型 路径，逻辑型 是否小写） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathGetExt
//获取文件的后缀名称。不包含“.”，如果有多级后缀，则只取最后一级后缀名称。本命令为初级命令。
//参数<1>的名称为“路径”，类型为“文本型（text）”。要获取后缀的路径。可以为相对路径。
//参数<2>的名称为“是否小写”，类型为“逻辑型（bool）”，初始值为“假”。是否返回的后缀名称全部转为小写。
//
//操作系统需求： Windows

//调用格式： 〈文本型〉 路径_取上级路径 （文本型 路径） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathGetParentPath
//获取指定路径的上级目录路径。返回的目录路径以“/”结尾。本命令为初级命令。
//参数<1>的名称为“路径”，类型为“文本型（text）”。要获取上级路径的路径。可以为相对路径。
//
//操作系统需求： Windows

//调用格式： 〈文本型〉 路径_取上级名称 （文本型 路径） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathGetParentName
//返回路径上级目录的名称。本命令为初级命令。
//参数<1>的名称为“路径”，类型为“文本型（text）”。要获取上级名称的路径。可以为相对路径。
//
//操作系统需求： Windows

//调用格式： 〈逻辑型〉 路径_是否为文件 （文本型 路径） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathIsFile
//判断指定的路径是否为文件。如果文件不存在或者为目录则返回“假”。本命令为初级命令。
//参数<1>的名称为“路径”，类型为“文本型（text）”。文件的路径。
//
//操作系统需求： Windows

//调用格式： 〈逻辑型〉 路径_是否为目录 （文本型 路径） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathIsDir
//判断指定的路径是否为目录。如果目录不存在或者为文件则返回“假”。本命令为初级命令。
//参数<1>的名称为“路径”，类型为“文本型（text）”。目录的路径。
//
//操作系统需求： Windows

//调用格式： 〈文本型〉 路径_格式化 （文本型 路径） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathFormat
//格式化处理路径文本。路径中支持相对路径符号“./”和“../”。路径不区分“\”和“/”，最终生成的路径都以“/”为主。本命令为初级命令。
//参数<1>的名称为“路径”，类型为“文本型（text）”。要格式化的路径。可以为相对路径。
//
//操作系统需求： Windows

//调用格式： 〈逻辑型〉 路径_复制目录 （文本型 来源目录，文本型 目标目录） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathCopyDir
//复制完整的目录和文件到另外的目录中。本命令为初级命令。
//参数<1>的名称为“来源目录”，类型为“文本型（text）”。要复制的目录路径。
//参数<2>的名称为“目标目录”，类型为“文本型（text）”。要复制到的目标目录路径。
//
//操作系统需求： Windows

//调用格式： 〈逻辑型〉 路径_是否绝对路径 （文本型 路径） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathIsAbsPath
//判断给定的路径是否为绝对路径。本命令为初级命令。
//参数<1>的名称为“路径”，类型为“文本型（text）”。要判断的路径。
//
//操作系统需求： Windows

//
//调用格式： 〈逻辑型〉 路径_是否属于目录 （文本型 上级目录，文本型 路径） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathContains
//判断指定路径是否属于特定的目录，支持相对路径符号“./”和“../”，传入的路径不区分“\”和“/”。本命令为初级命令。
//参数<1>的名称为“上级目录”，类型为“文本型（text）”。上级目录的路径。可以为相对路径。
//参数<2>的名称为“路径”，类型为“文本型（text）”。要判断是否在[上级目录]中的路径文本。可以为相对路径。
//
//操作系统需求： Windows

//调用格式： 〈文本型数组〉 路径_取目录列表 （文本型 目录） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathDirList
//返回指定目录下的目录名称数组。名称数组无路径信息。返回目录不会包含子目录下的目录。本命令为初级命令。
//参数<1>的名称为“目录”，类型为“文本型（text）”。要获取目录列表的主目录。
//
//操作系统需求： Windows

//调用格式： 〈文本型数组〉 路径_取文件列表 （文本型 目录，［文本型 文件后缀名］） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathFileList
//返回指定目录下的文件名称数组。支持通过扩展名过滤。返回名称数组无路径信息。返回文件名不会包含子目录下的文件。本命令为初级命令。
//参数<1>的名称为“目录”，类型为“文本型（text）”。要获取文件列表的主目录。
//参数<2>的名称为“文件后缀名”，类型为“文本型（text）”，可以被省略。要获取文件的后缀名称，如果为空或空文本则返回所有文件名称。
//
//操作系统需求： Windows

//调用格式： 〈文本型数组〉 路径_取所有文件 （文本型 目录，［文本型 文件后缀名］） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathGetAllFiles
//返回指定目录下的所有的文件相对路径数组(不包含目录的名称或路径)。支持通过扩展名过滤，返回路径包含指定目录下的所有子目录内的文件。本命令为初级命令。
//参数<1>的名称为“目录”，类型为“文本型（text）”。要获取文件列表的主目录。
//参数<2>的名称为“文件后缀名”，类型为“文本型（text）”，可以被省略。要获取文件的后缀名称，如果为空或空文本则返回所有文件名称。
//
//操作系统需求： Windows
//func E路径_创建多级目录(要创建的目录 string) bool {
//
//}

//调用格式： 〈逻辑型〉 路径_创建多级目录 （文本型 要创建的目录） - E2EE互联网服务器套件2.2.3->路径处理
//英文名称：PathMakeAnyDir
//创建任意级别的目录。目录存在直接返回真，不存在创建成功也返回真，创建失败返回假。本命令为初级命令。
//参数<1>的名称为“要创建的目录”，类型为“文本型（text）”。要创建的目录路径。
//
//操作系统需求： Windows
func E路径_创建多级目录(要创建的目录 string) bool {
	return E创建目录多级(要创建的目录) == nil
}
