package E

import (
	"testing"
)

func TestE文本_取随机数字(t *testing.T) {
	t.Log("E文本_取随机数字", E文本_取随机数字(10))
	t.Log("E文本_取随机数字", E文本_取随机数字(10))
	t.Log("E文本_取随机数字", E文本_取随机数字(10))
	t.Log("E文本_取随机数字", E文本_取随机数字(10))
	t.Log("E文本_取随机数字", E文本_取随机数字(10))

	t.Log("E文本_取随机字母", E文本_取随机字母(10, 2))
	t.Log("E文本_取随机字母", E文本_取随机字母(10, 2))
	t.Log("E文本_取随机字母", E文本_取随机字母(10, 2))
	t.Log("E文本_取随机字母", E文本_取随机字母(10, 2))
	t.Log("E文本_取随机字母", E文本_取随机字母(10, 2))

	t.Log("E文本_取随机字母和数字", E文本_取随机字母和数字(10))
	t.Log("E文本_取随机字母和数字", E文本_取随机字母和数字(10))
	t.Log("E文本_取随机字母和数字", E文本_取随机字母和数字(10))
	t.Log("E文本_取随机字母和数字", E文本_取随机字母和数字(10))
	t.Log("E文本_取随机字母和数字", E文本_取随机字母和数字(10))

}

func Test文本_取出中间文本(t *testing.T) {

	t.Log("文本_取左边", E文本_取左边("我爱efun好棒", "efun"))
	t.Log("文本_取右边", E文本_取右边("我爱efun好棒", "efun"))
	t.Log("文本_取出中间文本", E文本_取出中间文本("我爱efun好棒", "我爱", "好棒"))
	t.Log("StrCut", StrCut("我爱efun好棒", "我爱$好棒"))
	t.Log("StrCut", StrCut("我爱efun好棒", "efun$"))
	t.Log("StrCut", StrCut("我爱efun好棒", "$efun"))

}

func Test文本_删除左边(t *testing.T) {
	//一个文本3个字节
	t.Log("文本_删左边", E文本_删左边("我爱efun好棒", 2))
	t.Log("文本_删右边", E文本_删右边("我爱efun好棒", 2))
	t.Log("文本_删右边", E文本_删中间("我爱efun好棒", 2, 4))

	t.Log("文本_取出文本中汉字", E文本_取出文本中汉字("我爱efun好棒"))

	for i, s := range E文本_逐字分割("我爱efun好棒") {
		t.Log("E文本_逐字分割", i, s)
	}
	t.Log("E文本_颠倒", E文本_颠倒("我爱efun好棒"))
	t.Log("E文本_取随机姓氏", E文本_取随机姓氏())
	t.Log("E文本_取随机姓氏", E文本_取随机姓氏())
	t.Log("E文本_取随机姓氏", E文本_取随机姓氏())
	t.Log("E文本_取随机姓氏", E文本_取随机姓氏())
	t.Log("E文本_取随机姓氏", E文本_取随机姓氏())
	t.Log("E文本_自动补零", E文本_自动补零("1", 5))
	t.Log("E文本_自动补零", E文本_自动补零("12", 5))
	t.Log("E文本_自动补零", E文本_自动补零("123", 5))

}

func Test文本_判断大小写(t *testing.T) {

	t.Log("E文本_是否为汉字我", E文本_是否为汉字("我"))
	t.Log("E文本_是否为汉字e", E文本_是否为汉字("e"))

	t.Log("E文本_是否为字母", E文本_是否为字母("我"))
	t.Log("E文本_是否为字母.", E文本_是否为字母("."))
	t.Log("E文本_是否为字母e", E文本_是否为字母("e"))

	t.Log("E文本_是否为大写字母A", E文本_是否为大写字母("A"))
	t.Log("E文本_是否为大写字母a", E文本_是否为大写字母("a"))

	t.Log("E文本_是否为小写字母A", E文本_是否为小写字母("A"))
	t.Log("E文本_是否为小写字母a", E文本_是否为小写字母("a"))

	t.Log("E文本_是否为数字", E文本_是否为数字("A"))
	t.Log("E文本_是否为数字1", E文本_是否为数字("1"))

}
func TestE文本区分_只取字母(t *testing.T) {
	t.Log("E文本区分_只取字母", E文本区分_只取字母("我爱efun好棒"))
	t.Log("E文本区分_只取数字", E文本区分_只取数字("我爱efun520好棒"))
	t.Log("E文本区分_只取汉子", E文本区分_只取汉子("我爱efun520好棒"))
	t.Log("E文本区分_只取符号", E文本区分_只取符号("我爱efun520好棒!@#$%^&*()_+{}|:[]\\;,./"))

	t.Log("E文本_首字母改大写", E文本_首字母改大写("efun"))
	t.Log("E文本_首字母改大写", E文本_首字母改大写("我爱efun"))

}
func TestE取文本字数(t *testing.T) {
	t.Log("E取文本字数", E取文本字数("我爱efun好棒"))
	t.Log("E判断文本", E判断文本("我爱efun好棒", "1", "2", "3", "efun"))
	t.Log("E判断文本s", E判断文本s("我爱efun好棒", "1", "2", "3", "efun"))

	t.Log("E判断文本前缀", E判断文本前缀("我爱efun好棒", "我爱"))
	t.Log("E判断文本前缀", E判断文本前缀("我爱efun好棒", "efun"))
	t.Log("E判断文本后缀", E判断文本后缀("我爱efun好棒", "好棒"))
	t.Log("E判断文本后缀", E判断文本后缀("我爱efun好棒", "efun"))

}

func TestE转驼峰(t *testing.T) {
	t.Log("E文本_单词首字母大写", E文本_单词首字母大写("i love you"))
	t.Log("E文本_句子首字母大写", E文本_句子首字母大写("i love you"))
	t.Log("E文本_自动换行", E文本_自动换行("i love you i love you i love you i love you i love you i love you", 5, "\r\n"))
	var p float64
	t.Log("E文本_相似文本", E文本_相似文本("i love you ", "uoy evol i", &p))
	t.Log("E文本_相似文本", p)
	t.Log("E文本_相似文本", E文本_相似文本("i love you ", "i love you", &p))
	t.Log("E文本_相似文本", p)
	t.Log("E文本_随机文本", E文本_随机文本("i love you "))

	strArr := []string{"a123", "b321", "c123456"}
	t.Log("E文本_搜索切片文本", E文本_搜索切片文本(strArr, "b321"))

}
